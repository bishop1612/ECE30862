import java.util.Scanner;
import java.util.Random;
/**
 * Created by Bishop Sarkar on 10/13/2016.
 */

public class multiply {
	private int N;

	public multiply(int n) {
		N = n;
		// TODO Auto-generated constructor stub
	}
	
	/*
	 * Function checking the validilty of n
	 * */
	public static void check(int n) throws Exception{
		if(n%2!=0) {
            throw new Exception();
        }
	}
	
	/*
	 * Function forming the matrixes with random numbers
	 * */
	public int[][] formmatrix() {
		Random randomGenerator = new Random();
		int [][] formmatrix = new int[N][N];
		int i,j = 0;
		for(i = 0;i < N;i++){
			for(j = 0;j < N;j++){
				formmatrix[i][j] = randomGenerator.nextInt(100);
			}
		}
		return formmatrix;
		
	}
	
	/*
	 * Function to print matrixes
	 * */
	public void printmatrix(int [][] C, int n) {
		int i,j = 0;
		for(i = 0;i < n;i++){
			for(j = 0;j < n;j++){
				System.out.print(C[i][j] + " ");
			}
			System.out.println();
		}
		
	}
	

	public static void main(String[] args) throws InterruptedException {
		
		boolean status = true;
		Scanner reader = new Scanner(System.in);  // Reading from System.in
		System.out.println("Enter a number: ");
		int n = reader.nextInt();// Scans the next token of the input as an int.
		
		//try catch to get an acceptable value of N
		while(status) {
            try {
            	status = false;
                multiply.check(n);
            } catch (Exception e) {
                System.out.print(n + " is an unacceptable value of N, please enter a new value: ");
                n = reader.nextInt();
                status = true;
            }
        }
		
		//Forming the matrixes
		multiply mp = new multiply(n);
        int [][] A = mp.formmatrix();
        int [][] B = mp.formmatrix();
        
        
        //Instantiating the threads
        multiplythread Thread1 = new multiplythread(0,n,0,n,A,B,n);
        multiplythread Thread2 = new multiplythread(0,n/2,0,n,A,B,n);
        multiplythread Thread3 = new multiplythread(n/2,n,0,n,A,B,n);
        multiplythread Thread4 = new multiplythread(0,n/2,0,n/2,A,B,n);
        multiplythread Thread5 = new multiplythread(n/2,n,n/2,n,A,B,n);
        multiplythread Thread6 = new multiplythread(0,n/2,n/2,n,A,B,n);
        multiplythread Thread7 = new multiplythread(n/2,n,0,n/2,A,B,n);
        
        System.out.println("\nPrinting Matrix A:");
        mp.printmatrix(A, n);
        
        System.out.println("\nPrinting Matrix A:");
        mp.printmatrix(B, n);
        
        //Executing Thread1
        System.out.println("\nSingle Thread:");
        Thread1.start();
        Thread1.join();
        System.out.println("\nPrinting Matrix C:");
        mp.printmatrix(multiplythread.C, n);
        
        //Executing Thread2,3
        System.out.println("\nTwo Threads:");
        Thread2.start();
        Thread3.start();
        Thread2.join();
        Thread3.join();
        System.out.println("\nPrinting Matrix C:");
        mp.printmatrix(multiplythread.C, n);
        
        //Executing Thread4,5,6,7
        System.out.println("\nFour Threads:");
        Thread4.start();
        Thread5.start();
        Thread6.start();
        Thread7.start();
        Thread4.join();
        Thread5.join();
        Thread6.join();
        Thread7.join();
        System.out.println("\nPrinting Matrix C:");
        mp.printmatrix(multiplythread.C, n);
   
		reader.close();

	}

}
